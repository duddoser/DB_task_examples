# -*- coding: utf-8 -*-
"""Копия блокнота "Лабораторная-3.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MpCnDSsGp30sd2AxJ-AWZdswORbMzNZo

# Лабораторная 3

Задача: сделать оптимизацию select-запросов
Перед выполнением загрузите файл database.zip и ctrl+F9

Код создания базы данных (для понимания, что в ней находится)

```
CREATE TABLE employees ( -- сотрудники компании
    emp_no      INT             NOT NULL,
    birth_date  DATE            NOT NULL,
    first_name  VARCHAR(14)     NOT NULL,
    last_name   VARCHAR(16)     NOT NULL,
    gender      CHAR(2)         NOT NULL,    
    hire_date   DATE            NOT NULL,
    PRIMARY KEY (emp_no)
);

CREATE TABLE departments ( -- отделения
    dept_no     CHAR(4)         NOT NULL,
    dept_name   VARCHAR(40)     NOT NULL,
    PRIMARY KEY (dept_no)
);

CREATE TABLE dept_manager ( -- менеджеры отделений
   dept_no      CHAR(4)         NOT NULL,
   emp_no       INT             NOT NULL,
   from_date    DATE            NOT NULL,
   to_date      DATE            NOT NULL,
   FOREIGN KEY (emp_no)  REFERENCES employees (emp_no)    ON DELETE CASCADE,
   FOREIGN KEY (dept_no) REFERENCES departments (dept_no) ON DELETE CASCADE,
   PRIMARY KEY (emp_no,dept_no)
);

CREATE TABLE dept_emp (  -- связь сотрудников и отделений, даты работы
    emp_no      INT             NOT NULL,
    dept_no     CHAR(4)         NOT NULL,
    from_date   DATE            NOT NULL,
    to_date     DATE            NOT NULL,
    FOREIGN KEY (emp_no)  REFERENCES employees   (emp_no)  ON DELETE CASCADE,
    FOREIGN KEY (dept_no) REFERENCES departments (dept_no) ON DELETE CASCADE,
    PRIMARY KEY (emp_no,dept_no)
);

CREATE TABLE titles ( -- должности
    emp_no      INT             NOT NULL,
    title       VARCHAR(50)     NOT NULL,
    from_date   DATE            NOT NULL,
    to_date     DATE,
    FOREIGN KEY (emp_no) REFERENCES employees (emp_no) ON DELETE CASCADE,
    PRIMARY KEY (emp_no,title, from_date)
);

CREATE TABLE salaries ( -- зарплаты
    emp_no      INT             NOT NULL,
    salary      INT             NOT NULL,
    from_date   DATE            NOT NULL,
    to_date     DATE            NOT NULL,
    FOREIGN KEY (emp_no) REFERENCES employees (emp_no) ON DELETE CASCADE,
    PRIMARY KEY (emp_no, from_date)
);
```
"""

from google.colab import drive
drive.mount('/content/drive')

import zipfile

with zipfile.ZipFile('/content/drive/MyDrive/works/database.zip') as zf:  # Путь до файла
    zf.extractall()

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql
# %sql sqlite:///database.db

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# SELECT * FROM sqlite_master;

"""1. Выбрать имена сотрудников с датой рождения до 1 января 1980 года или с должностью помощника инженера"""

# Commented out IPython magic to ensure Python compatibility.
# %%time
# %%sql
# SELECT distinct first_name, last_name
# FROM employees e
# INNER JOIN salaries s
#     ON s.emp_no = e.emp_no
#     WHERE (
#         (e.birth_date < '1980-01-01')
#         OR e.emp_no IN (
#         select emp_no from titles t
#             where t.title like 'Assistant%'
#             order by from_date)
#     )
# LIMIT 10

"""**Вариант после оптимизации:**"""

# Commented out IPython magic to ensure Python compatibility.
# %%time
# %%sql
# SELECT first_name, last_name FROM employees e
#     WHERE (e.birth_date < '1980-01-01')
# 
# union all
# 
# SELECT first_name, last_name FROM employees e
#     INNER JOIN titles t
#     ON e.emp_no = t.emp_no
#       WHERE t.title LIKE 'Assistant%'
# 
# LIMIT 10

"""2. Выбрать сотрудников, в настоящее время работающие в отделах, где менеджеры мужчины"""

# Commented out IPython magic to ensure Python compatibility.
# %%time
# %%sql
# SELECT first_name, last_name
# FROM employees e
# INNER JOIN dept_emp d
#     ON d.emp_no = e.emp_no
#     WHERE d.dept_no in (
#     SELECT d.dept_no FROM employees e, dept_manager dm, departments d
#         WHERE e.emp_no = dm.emp_no AND dm.dept_no = d.dept_no
#         AND dm.to_date = (SELECT MAX(to_date) from dept_manager)
#         AND e.gender = 'M'
#         GROUP BY d.dept_no
#     )
#     AND d.to_date = (SELECT MAX(to_date) from dept_emp)
# LIMIT 10

"""**Вариант после оптимизации:**"""

# Commented out IPython magic to ensure Python compatibility.
# %%time
# %%sql
# 
# WITH department (dept_no) AS
# (
#     SELECT d.dept_no
#     FROM employees e
#     INNER JOIN dept_manager dm, departments d
#     ON e.emp_no = dm.emp_no AND dm.dept_no = d.dept_no
#     WHERE dm.to_date =(SELECT MAX(to_date) from dept_manager) AND e.gender = 'M'
# )
# 
# SELECT first_name, last_name
# FROM employees e
# INNER JOIN dept_emp d, department
# ON d.emp_no = e.emp_no and d.dept_no = department.dept_no
# WHERE d.dept_no in department and d.to_date = (SELECT MAX(to_date) from dept_manager)
# 
# LIMIT 10